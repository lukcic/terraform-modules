#!/bin/bash -xe
apt-get update
apt-get install -y ca-certificates curl gnupg
mkdir -p /etc/apt/keyrings
curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_${node_ver}.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list
curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | sudo tee /usr/share/keyrings/yarnkey.gpg >/dev/null
echo "deb [signed-by=/usr/share/keyrings/yarnkey.gpg] https://dl.yarnpkg.com/debian stable main" | sudo tee /etc/apt/sources.list.d/yarn.list

apt update && apt upgrade -y
apt install jq git-lfs docker.io make g++ postgresql libpq-dev nodejs yarn -y
usermod -aG docker ubuntu && newgrp docker
systemctl disable --now postgresql.service
yarn --version
node --version

mkdir /actions-runner
cd /actions-runner || { echo "ERROR! No /actions-runner found.."; exit 1; }
curl -o actions-runner-linux-x64-${runner_ver}.tar.gz -L https://github.com/actions/runner/releases/download/v${runner_ver}/actions-runner-linux-x64-${runner_ver}.tar.gz
tar xzf ./actions-runner-linux-x64-${runner_ver}.tar.gz || { echo "ERROR! Extracting the actions-runner tar"; exit 1; }

useradd actions_runner --create-home --shell /bin/bash
usermod -aG docker actions_runner && newgrp docker
chown actions_runner:actions_runner -R /actions-runner
su actions_runner -c "/actions-runner/config.sh --url ${github_repo_url} --token ${runner_token} --name ${runner_name} --unattended"
./svc.sh install && ./svc.sh start

cat <<EOF > /usr/bin/remove-old-docker-images.sh
#!/bin/bash -xe
docker image prune --all  --filter 'until=${images_age}' -f
EOF

chmod +x /usr/bin/remove-old-docker-images.sh

cat <<EOF >/lib/systemd/system/remove-old-docker-images.service
[Unit]
Description=Removing docker images older than ${images_age}
Wants=remove-old-docker-images.timer

[Service]
Type=oneshot
ExecStart=/usr/bin/remove-old-docker-images.sh
User=root
Group=root

[Install]
WantedBy=multi-user.target
EOF

cat <<EOF >/lib/systemd/system/remove-old-docker-images.timer
[Unit]
Description=Timer for removing old docker images
Requires=remove-old-docker-images.service

[Timer]
Persistent=true
OnCalendar=Mon 07:30:00
Unit=remove-old-docker-images.service

[Install]
WantedBy=timers.target
EOF

systemctl daemon-reload
systemctl enable --now remove-old-docker-images.service
systemctl enable --now remove-old-docker-images.timer

cd /root

wget "https://github.com/prometheus/node_exporter/releases/download/v${exporter_version}/node_exporter-${exporter_version}.linux-amd64.tar.gz" \
    -O /tmp/node_exporter.tar.gz

mkdir -p /tmp/node_exporter

cd /tmp || { echo "ERROR! No /tmp found.."; exit 1; }

tar xfz /tmp/node_exporter.tar.gz -C /tmp/node_exporter || { echo "ERROR! Extracting the node_exporter tar"; exit 1; }

cp "/tmp/node_exporter/node_exporter-${exporter_version}.linux-amd64/node_exporter" "/usr/local/bin"
useradd node_exporter --no-create-home --shell /bin/false
chown node_exporter:node_exporter "/usr/local/bin/node_exporter"

cat <<EOF > /etc/systemd/system/node_exporter.service
[Unit]
Description=Node Exporter
Wants=network-online.target
After=network-online.target

[Service]
User=node_exporter
Group=node_exporter
Type=simple
ExecStart=/usr/local/bin/node_exporter

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable --now node_exporter.service

shutdown -r now